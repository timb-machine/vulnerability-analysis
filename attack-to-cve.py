#!/usr/bin/python3

import os
import sys
import getopt
import urllib.request
import re
import json
import time

debugflag = False
verboseflag = False
attackurl = "https://github.com/mitre/cti/raw/master/enterprise-attack/enterprise-attack.json"

print(os.path.basename(__file__) + " 0.0.1")
try:
    options, arguments = getopt.getopt(sys.argv[1:], "dvA:", [ "debug", "verbose", "attackurl=" ])
except:
    usage(os.path.basename(__file__))
for option, value in options:
    if option == "-d" or option == "--debug":
        debugflag = True
    if option == "-v" or option == "--verbose":
        verboseflag = True
    if option == "-A" or option == "--attackurl":
        attackurl = value
print("I: using " + attackurl)
with urllib.request.urlopen(attackurl) as url:
    attackdata = url.read().decode()
    cves = re.findall("CVE-[0-9]{4}-[0-9]+", attackdata, re.IGNORECASE | re.MULTILINE)
    uniquecves = {}
    for cve in cves:
        if cve not in uniquecves:
            uniquecves[cve] = 1
        else:
            uniquecves[cve] += 1
    for cve in uniquecves.keys():
        successflag = False
        while successflag != True:
            time.sleep(2)
            try:
                with urllib.request.urlopen("https://services.nvd.nist.gov/rest/json/cve/1.0/" + cve) as url:
                    cvedata = json.loads(url.read().decode())
                    if "baseMetricV3" in cvedata["result"]["CVE_Items"][0]["impact"]:
                        print(cve + "," + str(uniquecves[cve]) + "," + cvedata["result"]["CVE_Items"][0]["impact"]["baseMetricV3"]["cvssV3"]["vectorString"] + "," + str(cvedata["result"]["CVE_Items"][0]["impact"]["baseMetricV3"]["cvssV3"]["baseScore"]) + "," + cvedata["result"]["CVE_Items"][0]["cve"]["problemtype"]["problemtype_data"][0]["description"][0]["value"], flush=True)
                    else:
                        print(cve + "," + str(uniquecves[cve]), flush=True)
                successflag = True
            except:
                pass
